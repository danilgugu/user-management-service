plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'gugunava.danil'
version = '1.0.0'
description = 'user-management-service'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.liquibase:liquibase-core:4.23.2'
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.c4-soft.springaddons:spring-security-oauth2-test-addons-jdk11:4.1.5'
}

test {
    useJUnitPlatform()

    dependsOn 'startIntegrationTestDatabase'
    finalizedBy 'stopIntegrationTestDatabase'
}

task startIntegrationTestDatabase(type: Exec, group: 'containers', description: 'Starts a database container for integration testing.') {
    String checkCommand = '[ ! "$(docker ps -a | grep test_database)" ] && '
    String startCommand = "docker run --rm -d -p 5433:5432 --name test_database -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=users_test_db -v ./src/main/resources/create-liquibase-changes-schema.sql:/docker-entrypoint-initdb.d/init.sql postgres:13.12-alpine"
    executable 'sh'
    args '-c', checkCommand + startCommand
}

task stopIntegrationTestDatabase(type: Exec, group: 'containers', description: 'Stops the database container for integration testing.') {
    executable 'sh'
    args '-c', 'docker stop test_database'
}
